import { useEffect, useState } from "react";

function App() {
  const [apiKey, setApiKey] = useState("");
  const [showApiKey, setShowApiKey] = useState(true);
  const [loading, setLoading] = useState(true);

  useEffect(() => {
    chrome.runtime.sendMessage({ cmd: "getApiKey" }, (response) => {
      if (response.apiKey) {
        setShowApiKey(false);
      }

      if (!response.apiKey) setLoading(false);
      else setApiKey(response.apiKey);
    });
  }, []);

  return (
    <div className="h-full min-h-[300px] w-full min-w-[400px] bg-[#1F1F1F] p-5 text-white">
      <div
        className={`${
          loading ? "opacity-100" : "pointer-events-none opacity-0"
        } absolute left-0 top-0 z-10 flex h-full w-full flex-col items-center justify-center gap-4 bg-[#1F1F1F] text-white transition-all`}
      ></div>
      <>
        <header>
          <a href="https://appli-dev.vercel.app">
            <svg
              width="112"
              height="25"
              viewBox="0 0 112 25"
              fill="none"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M2.2 11.96V10.22C2.2 9.04667 2.48667 8.08667 3.06 7.34C3.63333 6.58 4.48 6.08667 5.6 5.86V7.36C5.13333 7.46667 4.74667 7.66667 4.44 7.96C4.14667 8.24 3.95333 8.57333 3.86 8.96H5.2V11.96H2.2ZM8.81484 21V10.08H11.6148V12.74L11.3148 12.3C11.4748 11.46 11.8615 10.84 12.4748 10.44C13.0882 10.04 13.8215 9.84 14.6748 9.84C15.5815 9.84 16.3748 10.0733 17.0548 10.54C17.7482 10.9933 18.1815 11.6067 18.3548 12.38L17.4948 12.46C17.8548 11.5667 18.3682 10.9067 19.0348 10.48C19.7015 10.0533 20.4815 9.84 21.3748 9.84C22.1615 9.84 22.8548 10.0133 23.4548 10.36C24.0682 10.7067 24.5482 11.1933 24.8948 11.82C25.2415 12.4333 25.4148 13.1533 25.4148 13.98V21H22.4148V14.62C22.4148 14.1933 22.3348 13.8267 22.1748 13.52C22.0282 13.2133 21.8148 12.9733 21.5348 12.8C21.2548 12.6267 20.9148 12.54 20.5148 12.54C20.1282 12.54 19.7882 12.6267 19.4948 12.8C19.2148 12.9733 18.9948 13.2133 18.8348 13.52C18.6882 13.8267 18.6148 14.1933 18.6148 14.62V21H15.6148V14.62C15.6148 14.1933 15.5348 13.8267 15.3748 13.52C15.2282 13.2133 15.0148 12.9733 14.7348 12.8C14.4548 12.6267 14.1148 12.54 13.7148 12.54C13.3282 12.54 12.9882 12.6267 12.6948 12.8C12.4148 12.9733 12.1948 13.2133 12.0348 13.52C11.8882 13.8267 11.8148 14.1933 11.8148 14.62V21H8.81484ZM32.8091 21.24C31.7291 21.24 30.7424 20.9933 29.8491 20.5C28.9691 20.0067 28.2624 19.3333 27.7291 18.48C27.2091 17.6133 26.9491 16.6333 26.9491 15.54C26.9491 14.4333 27.2091 13.4533 27.7291 12.6C28.2624 11.7467 28.9691 11.0733 29.8491 10.58C30.7424 10.0867 31.7291 9.84 32.8091 9.84C33.8891 9.84 34.8691 10.0867 35.7491 10.58C36.6291 11.0733 37.3291 11.7467 37.8491 12.6C38.3824 13.4533 38.6491 14.4333 38.6491 15.54C38.6491 16.6333 38.3824 17.6133 37.8491 18.48C37.3291 19.3333 36.6291 20.0067 35.7491 20.5C34.8691 20.9933 33.8891 21.24 32.8091 21.24ZM32.8091 18.54C33.3557 18.54 33.8291 18.4133 34.2291 18.16C34.6424 17.9067 34.9624 17.5533 35.1891 17.1C35.4291 16.6467 35.5491 16.1267 35.5491 15.54C35.5491 14.9533 35.4291 14.44 35.1891 14C34.9624 13.5467 34.6424 13.1933 34.2291 12.94C33.8291 12.6733 33.3557 12.54 32.8091 12.54C32.2624 12.54 31.7824 12.6733 31.3691 12.94C30.9557 13.1933 30.6291 13.5467 30.3891 14C30.1624 14.44 30.0491 14.9533 30.0491 15.54C30.0491 16.1267 30.1624 16.6467 30.3891 17.1C30.6291 17.5533 30.9557 17.9067 31.3691 18.16C31.7824 18.4133 32.2624 18.54 32.8091 18.54ZM40.4164 21V10.08H43.2164V12.7L43.0164 12.32C43.2564 11.4 43.6497 10.78 44.1964 10.46C44.7564 10.1267 45.4164 9.96 46.1764 9.96H46.8164V12.56H45.8764C45.1431 12.56 44.5497 12.7867 44.0964 13.24C43.6431 13.68 43.4164 14.3067 43.4164 15.12V21H40.4164ZM48.1313 21V10.08H50.9313V12.7L50.7313 12.32C50.9713 11.4 51.3646 10.78 51.9113 10.46C52.4713 10.1267 53.1313 9.96 53.8913 9.96H54.5313V12.56H53.5913C52.8579 12.56 52.2646 12.7867 51.8113 13.24C51.3579 13.68 51.1313 14.3067 51.1313 15.12V21H48.1313ZM61.2661 21.24C60.1861 21.24 59.1994 20.9933 58.3061 20.5C57.4261 20.0067 56.7194 19.3333 56.1861 18.48C55.6661 17.6133 55.4061 16.6333 55.4061 15.54C55.4061 14.4333 55.6661 13.4533 56.1861 12.6C56.7194 11.7467 57.4261 11.0733 58.3061 10.58C59.1994 10.0867 60.1861 9.84 61.2661 9.84C62.3461 9.84 63.3261 10.0867 64.2061 10.58C65.0861 11.0733 65.7861 11.7467 66.3061 12.6C66.8394 13.4533 67.1061 14.4333 67.1061 15.54C67.1061 16.6333 66.8394 17.6133 66.3061 18.48C65.7861 19.3333 65.0861 20.0067 64.2061 20.5C63.3261 20.9933 62.3461 21.24 61.2661 21.24ZM61.2661 18.54C61.8128 18.54 62.2861 18.4133 62.6861 18.16C63.0994 17.9067 63.4194 17.5533 63.6461 17.1C63.8861 16.6467 64.0061 16.1267 64.0061 15.54C64.0061 14.9533 63.8861 14.44 63.6461 14C63.4194 13.5467 63.0994 13.1933 62.6861 12.94C62.2861 12.6733 61.8128 12.54 61.2661 12.54C60.7194 12.54 60.2394 12.6733 59.8261 12.94C59.4128 13.1933 59.0861 13.5467 58.8461 14C58.6194 14.44 58.5061 14.9533 58.5061 15.54C58.5061 16.1267 58.6194 16.6467 58.8461 17.1C59.0861 17.5533 59.4128 17.9067 59.8261 18.16C60.2394 18.4133 60.7194 18.54 61.2661 18.54ZM71.5581 21L67.7981 10.08H70.8981L73.5381 17.96L72.4581 17.94L75.3981 10.08H77.9981L80.9181 17.94L79.8381 17.96L82.4781 10.08H85.5981L81.8181 21H79.2181L76.1781 12.56H77.2181L74.1581 21H71.5581Z"
                fill="#F7F7F7"
              />
              <path
                d="M103.735 3.33503C103.395 2.99437 102.943 2.78799 102.463 2.75382C101.982 2.71965 101.506 2.85998 101.12 3.14903L98.2075 5.33403C96.9974 6.24181 95.578 6.82992 94.0805 7.04403L91.9035 7.35403C91.1735 7.45903 90.6385 8.24503 90.9905 9.01603C91.3215 9.73903 92.3755 11.645 95.3505 14.736L91.1725 18.914C91.077 19.0063 91.0008 19.1166 90.9484 19.2386C90.896 19.3606 90.8684 19.4918 90.8672 19.6246C90.8661 19.7574 90.8914 19.8891 90.9417 20.012C90.9919 20.1349 91.0662 20.2465 91.1601 20.3404C91.254 20.4343 91.3656 20.5086 91.4885 20.5588C91.6114 20.6091 91.7431 20.6344 91.8759 20.6333C92.0087 20.6321 92.1399 20.6045 92.2619 20.5521C92.3839 20.4997 92.4942 20.4235 92.5865 20.328L96.7645 16.15C99.8555 19.125 101.761 20.179 102.484 20.51C103.254 20.862 104.041 20.327 104.145 19.597L104.456 17.42C104.671 15.9225 105.259 14.5031 106.166 13.293L108.35 10.38C108.64 9.9948 108.78 9.5182 108.746 9.0378C108.712 8.5574 108.505 8.10547 108.164 7.76503L103.734 3.33503H103.735Z"
                fill="#FAFAFA"
              />
            </svg>
          </a>
        </header>
        {showApiKey && (
          <>
            <label className="mt-5 block text-sm text-zinc-300">API Key</label>
            <input
              className="mt-2 rounded-md border border-zinc-600 bg-[#292929] px-5 py-2 text-white outline-none"
              type="password"
              placeholder="Enter API key"
              value={apiKey}
              onChange={(e) => {
                setApiKey(e.target.value);
                chrome.runtime.sendMessage({
                  cmd: "saveApiKey",
                  apiKey: e.target.value,
                });
              }}
            />
          </>
        )}
      </>
    </div>
  );
}

export default App;
